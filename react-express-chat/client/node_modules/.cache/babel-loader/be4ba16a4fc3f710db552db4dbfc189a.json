{"ast":null,"code":"var _jsxFileName = \"/Users/seulgi/Desktop/study/chatting/chat/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketio.connect('http://localhost:5000', {\n  transports: ['websocket']\n});\nsocket.on('connect', () => {\n  console.log('connect');\n});\n\nfunction Chat() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  const username = location.state.username; // const chatview = document.getElementsByClassName('chat-view');\n\n  const enterMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', {\n        username,\n        message\n      }, () => setMessage(''));\n    }\n  };\n\n  socket.on('updateMessage', data => {\n    const messageWrap = drawChat(data);\n    console.log(messageWrap); // ReactDOM.render(messageWrap, chatview);\n    // document.getElementsByClassName('chat-view').appendChild(messageWrap);\n\n    document.body.appendChild(messageWrap);\n  });\n\n  const drawChat = data => {\n    const messageWrap = document.createElement('div');\n    const name = document.createElement('div');\n    const message = document.createElement('div');\n    messageWrap.classList.add('message-wrap');\n    name.innerText = data.username;\n    name.classList.add('message-usernamae');\n    message.innerText = data.message;\n    message.classList.add('message');\n\n    if (name === username) {\n      messageWrap.classList.add('my-message');\n    }\n\n    messageWrap.appendChild(name);\n    messageWrap.appendChild(message);\n    return messageWrap;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn-back\",\n        children: [\" \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \"Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"enter-form\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"message\",\n        onChange: enterMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        id: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"g72eX/JHuoIfCf1gwYYEQym717o=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/seulgi/Desktop/study/chatting/chat/src/components/Chat.js"],"names":["React","useState","useLocation","socketio","socket","connect","transports","on","console","log","Chat","message","setMessage","location","username","state","enterMessage","e","target","value","sendMessage","preventDefault","emit","data","messageWrap","drawChat","document","body","appendChild","createElement","name","classList","add","innerText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport socketio from 'socket.io-client'\nimport \"./Chat.css\"\n\nconst socket = socketio.connect('http://localhost:5000',{transports:['websocket']});\nsocket.on ('connect', () => {    \n    console.log('connect')\n});\nfunction Chat () {\n    const [message, setMessage] = useState('');\n    const location = useLocation();\n    const username = location.state.username;\n    // const chatview = document.getElementsByClassName('chat-view');\n    const enterMessage = (e) => {\n        setMessage(e.target.value);\n    };\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message) {\n            socket.emit('sendMessage', { \n                username, message \n            }, () => setMessage(''));\n        }\n    };\n\n    socket.on ('updateMessage', (data) => {\n        const messageWrap = drawChat(data);\n        console.log(messageWrap)\n        // ReactDOM.render(messageWrap, chatview);\n        // document.getElementsByClassName('chat-view').appendChild(messageWrap);\n        document.body.appendChild(messageWrap);\n    })\n\n    const drawChat = (data) => {\n        const messageWrap = document.createElement('div');\n        const name = document.createElement('div');\n        const message = document.createElement('div');\n\n        messageWrap.classList.add('message-wrap');\n        name.innerText = data.username;\n        name.classList.add('message-usernamae');\n        message.innerText = data.message;\n        message.classList.add('message');\n                \n        if(name === username) {\n            messageWrap.classList.add('my-message');\n        }\n\n        messageWrap.appendChild(name);\n        messageWrap.appendChild(message);\n        return messageWrap;\n    }\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-header\">\n                <button id=\"btn-back\"> {username} </button>\n                Chat \n            </div>\n            <div className=\"chat-view\">\n\n            </div>\n            <form className=\"enter-form\" onSubmit={sendMessage}>\n                <input type=\"text\" id=\"message\" onChange={enterMessage}/>\n                <input type=\"submit\" value=\"Send\" id=\"send\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}