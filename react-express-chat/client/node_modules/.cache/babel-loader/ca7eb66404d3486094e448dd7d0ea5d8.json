{"ast":null,"code":"var _jsxFileName = \"/Users/seulgi/Desktop/study/chatting/chat/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\n// import { Socket } from 'engine.io';\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketio.connect('http://localhost:5000', {\n  transports: ['websocket']\n});\n\nfunction Chat() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  const username = location.state.username;\n  socket.on('connect', () => {\n    socket.emit('newUser', username);\n  });\n  socket.on('updateMessage', data => {// if(data.username === 'server') {\n    //     const chatinfo = document.getElementsByClassName('chat-info');\n    //     chatinfo.innerHTML = data.message;\n    // }\n  });\n\n  const enterMessage = e => {\n    setMessage(e.target.value);\n  }; // socket.on('message', (msg) => {\n  //     var messageList = document.getElementById('messages');\n  //     var messageTag = document.createElement(\"li\");\n  //     messageTag.innerText = msg;\n  //     messageList.appendChild(messageTag);\n  // });\n\n\n  const sendMessage = e => {\n    e.preventDefault(); // if(message) {\n    //     socket.emit('chat', {\n    //         username: username,\n    //         message: message\n    //     }, () => setMessage(''));\n    // }\n  };\n\n  const drawChat = data => {\n    const username = document.createElement('div');\n    username.innerText = data.username;\n    username.classList.add('message-usernamae');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn-back\",\n        children: [\" \", username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \"Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"enter-form\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"message\",\n        onChange: enterMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        id: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"g72eX/JHuoIfCf1gwYYEQym717o=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/seulgi/Desktop/study/chatting/chat/src/components/Chat.js"],"names":["React","useState","useLocation","socketio","socket","connect","transports","Chat","message","setMessage","location","username","state","on","emit","data","enterMessage","e","target","value","sendMessage","preventDefault","drawChat","document","createElement","innerText","classList","add"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,YAAP;;AAEA,MAAMC,MAAM,GAAGD,QAAQ,CAACE,OAAT,CAAiB,uBAAjB,EAAyC;AAACC,EAAAA,UAAU,EAAC,CAAC,WAAD;AAAZ,CAAzC,CAAf;;AAEA,SAASC,IAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAeD,QAAhC;AACAP,EAAAA,MAAM,CAACS,EAAP,CAAW,SAAX,EAAsB,MAAM;AACxBT,IAAAA,MAAM,CAACU,IAAP,CAAY,SAAZ,EAAuBH,QAAvB;AACH,GAFD;AAGAP,EAAAA,MAAM,CAACS,EAAP,CAAW,eAAX,EAA6BE,IAAD,IAAU,CAClC;AACA;AACA;AACA;AACH,GALD;;AAMA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBR,IAAAA,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD,CAba,CAgBb;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,WAAW,GAAIH,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACI,cAAF,GADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACH,GARD;;AASA,QAAMC,QAAQ,GAAIP,IAAD,IAAU;AACvB,UAAMJ,QAAQ,GAAGY,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AAEAb,IAAAA,QAAQ,CAACc,SAAT,GAAqBV,IAAI,CAACJ,QAA1B;AACAA,IAAAA,QAAQ,CAACe,SAAT,CAAmBC,GAAnB,CAAuB,mBAAvB;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAA,wBAAwBhB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YALJ,eAuBI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAES,WAAvC;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAgC,QAAA,QAAQ,EAAEJ;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,EAAE,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GArEQT,I;UAEYL,W;;;KAFZK,I;AAuET,eAAeA,IAAf","sourcesContent":["// import { Socket } from 'engine.io';\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport socketio from 'socket.io-client'\nimport \"./Chat.css\"\n\nconst socket = socketio.connect('http://localhost:5000',{transports:['websocket']});\n\nfunction Chat () {\n    const [message, setMessage] = useState('');\n    const location = useLocation();\n    const username = location.state.username;\n    socket.on ('connect', () => {\n        socket.emit('newUser', username);\n    });\n    socket.on ('updateMessage', (data) => {\n        // if(data.username === 'server') {\n        //     const chatinfo = document.getElementsByClassName('chat-info');\n        //     chatinfo.innerHTML = data.message;\n        // }\n    })\n    const enterMessage = (e) => {\n        setMessage(e.target.value);\n    };\n    // socket.on('message', (msg) => {\n    //     var messageList = document.getElementById('messages');\n    //     var messageTag = document.createElement(\"li\");\n    //     messageTag.innerText = msg;\n    //     messageList.appendChild(messageTag);\n    // });\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        // if(message) {\n        //     socket.emit('chat', {\n        //         username: username,\n        //         message: message\n        //     }, () => setMessage(''));\n        // }\n    };\n    const drawChat = (data) => {\n        const username = document.createElement('div');\n\n        username.innerText = data.username;\n        username.classList.add('message-usernamae')\n    }\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-header\">\n                <button id=\"btn-back\"> {username} </button>\n                Chat \n            </div>\n            <div className=\"chat-view\">\n                {/* <div className=\"message-wrap my-message\"> \n                    <div className=\"message-usernamae\">seulgi</div>\n                    <div className=\"message\">안녕</div>\n                </div>\n                <div className=\"message-wrap your-message\"> \n                    <div className=\"message-usernamae\">seulgi</div>\n                    <div className=\"message\">구래 안녕 내일 보장</div>\n                </div>\n                <div className=\"message-wrap your-message\"> \n                    <div className=\"message-usernamae\">seulgi</div>\n                    <div className=\"message\">웅 빠이</div>\n                </div>\n                <div className=\"message-wrap my-message\"> \n                    <div className=\"message-usernamae\">seulgi</div>\n                    <div className=\"message\">빠이</div>\n                </div> */}\n            </div>\n            <form className=\"enter-form\" onSubmit={sendMessage}>\n                <input type=\"text\" id=\"message\" onChange={enterMessage}/>\n                <input type=\"submit\" value=\"Send\" id=\"send\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}